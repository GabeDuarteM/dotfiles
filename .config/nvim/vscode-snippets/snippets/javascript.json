{
  "imp": {
    "prefix": "imp",
    "body": "import ${2:module} from '$1'",
    "description": "Import statement"
  },
  "clg": {
    "prefix": "clg",
    "body": "console.log($1)",
    "description": "console.log()"
  },
  "iife": {
    "prefix": "iife",
    "body": [
      ";(() => {",
      "  $1",
      "})()"
    ],
    "description": "Immediately-Invoked Function Expression (iife)"
  },
  "noopfunction": {
    "prefix": "noopfunction",
    "body": "() => {}",
    "description": "noop function"
  },
  "setTimeout": {
    "prefix": "setTimeout",
    "body": "setTimeout(() => ${1:${TM_SELECTED_TEXT:function}}, ${2:ms})",
    "description": "setTimeout function"
  },
  "setInterval": {
    "prefix": "setInterval",
    "body": "setInterval(() => ${1:${TM_SELECTED_TEXT:function}}, ${2:ms})",
    "description": "setInterval function"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if(${1:condition}) {",
      "  ${2:${TM_SELECTED_TEXT}}",
      "}$0"
    ],
    "description": "if condition"
  },
  "else": {
    "prefix": "else",
    "body": [
      "else {",
      "  ${1:TM_SELECTED_TEXT}",
      "}"
    ],
    "description": "else"
  },
  "trycondition": {
    "prefix": "try",
    "body": [
      "try {",
      "  ${TM_SELECTED_TEXT}",
      "} catch (err) {",
      "  throw ${1:err};",
      "}$0"
    ],
    "description": "try"
  },
  "switch": {
    "prefix": "switch",
    "body": [
      "switch (${1:condition}) {",
      "  case ${2:option}:",
      "    ${3:TM_SELECTED_TEXT}",
      "    break",
      "  $0",
      "  default:",
      "    ${4:throw new Error(\"Not implemented\")}",
      "}"
    ],
    "description": "switch"
  },
  "case": {
    "prefix": "case",
    "body": [
      "case ${1:option}:",
      "  ${2:TM_SELECTED_TEXT}",
      "  break"
    ],
    "description": "case"
  },
  "jsdoc": {
    "prefix": "jsdoc",
    "body": "/** ${0:TM_SELECTED_TEXT} */",
    "description": "jsdoc comment"
  },
  "jsdocMultiline": {
    "prefix": "jsdocMultiline",
    "body": [
      "/** ",
      " * ${0:TM_SELECTED_TEXT}",
      " */"
    ],
    "description": "jsdoc comment"
  },
  "commentMultiline": {
    "prefix": "commentMultiline",
    "body": [
      "/* ",
      "  ${TM_SELECTED_TEXT}",
      "*/"
    ],
    "description": "Multiline comments"
  },
  "shebang": {
    "prefix": "#!",
    "body": [
      "#!/usr/bin/env node",
      ""
    ],
    "description": "node shebang"
  },
  "require": {
    "prefix": "req",
    "body": [
      "const $2 = require('$1')"
    ],
    "description": "require"
  },
  "ind": {
    "prefix": "ind",
    "body": [
      "export { default } from './${TM_DIRECTORY/.*\\/(.*)$/$1/}'",
      ""
    ],
    "description": "Template for the index.js"
  },
  "describeblock": {
    "prefix": "describe",
    "body": [
      "describe('$1', () => {",
      "  ${2:${TM_SELECTED_TEXT}}",
      "})"
    ],
    "description": "describe jest block"
  },
  "itblock": {
    "prefix": "it",
    "body": [
      "it('should $1', () => {",
      "  ${2:${TM_SELECTED_TEXT}}",
      "})"
    ],
    "description": "it jest block"
  },
  "testblock": {
    "prefix": "test",
    "body": [
      "test('$1', () => {",
      "  ${2:${TM_SELECTED_TEXT}}",
      "})"
    ],
    "description": "test jest block"
  },
  "expect": {
    "prefix": "expect",
    "body": "expect(1).${2:toBe}($3)$4",
    "description": "expect jest"
  }
}
