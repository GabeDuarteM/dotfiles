# git
alias git=hub
alias g=git
alias ga="git add --all"
alias gc="git commit"
alias gcm="git commit -m"
alias gs="git stash"
alias gsa="git stash apply"
alias gst="git status"
alias gl="git log"
alias glo="git log --oneline"
alias gp="git push"
gcb() {
  git checkout -b $1
  git push -u origin $1
}

# yarn
alias y=yarn
alias ys="yarn run start"
alias yt="yarn run test"
alias yl="yarn run lint"
alias yb="yarn run build"
alias yu="yarn upgrade-interactive --latest"

# npm
alias ns="npm run start"
alias nt="npm run test"
alias nl="npm run lint"
alias nb="npm run build"
alias nu="npx npm-check -u"
alias j="z"

# fzf
_getProjectBase() {
  echo $1/$(find $1 -maxdepth 1 -type d ! -path $1 -exec basename {} \; | fzf --no-preview --height=40% --header="Select the project:" --reverse --query "$2" --select-1)
}

_getProject() {
  _getProjectBase "$PROJECTS_FOLDER" "$1"
}

_getWorkProject() {
  _getProjectBase "$WORK_FOLDER" "$1"
}

# cd into some folder inside the projects folder
unalias p # p is aliased to something related to z
p() {
  local dir=$(_getProject $1)
  if [ "$dir" != "$PROJECTS_FOLDER/" ]; then;
    cd $dir
  fi
}

# cd into some folder inside the work projects folder
wp() {
  local dir=$(_getWorkProject $1)
  if [ "$dir" != "$WORK_FOLDER/" ]; then;
    cd $dir
  fi
}

# vim into a project folder
ep() {
  local dir=$(_getProject $1)
  if [ "$dir" != "$PROJECTS_FOLDER/" ]; then;
    cd $dir
    $EDITOR $dir
  fi
}

# vim into a work project folder
wep() {
  local dir=$(_getWorkProject $1)
  if [ "$dir" != "$WORK_FOLDER/" ]; then;
    cd $dir
    $EDITOR $dir
  fi
}

# misc
alias proj="cd ~/Projects"
alias cls="clear"
alias l='ls -1A'
alias gd-oss="npx -p yo -p generator-gd-scripts -c 'yo gd-scripts'"
alias vim="nvim"
alias vi="nvim"
alias :q="exit"
alias e.="$EDITOR ."

killport() { lsof -i tcp:"$*" | awk 'NR!=1 {print $2}' | xargs kill -9 ;}
